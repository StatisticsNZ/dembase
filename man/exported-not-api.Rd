% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/AllGeneric.R,
%   R/Counts-methods.R, R/DemographicAccount-methods.R,
%   R/DemographicArray-methods.R, R/DimScale-methods.R, R/Intervals-methods.R,
%   R/MetaData-methods.R, R/Points-methods.R, R/Quantiles-methods.R,
%   R/Values-methods.R, R/array-methods.R, R/miscellaneous-functions.R
\docType{class}
\name{exported-not-api}
\alias{exported-not-api}
\alias{MetaData-class}
\alias{Transform-class}
\alias{CollapseTransform-class}
\alias{CollapseTransformExtra-class}
\alias{CountsWithSubtotalsInternal-class}
\alias{DimScales}
\alias{DimScales<-}
\alias{canMakeCompatible}
\alias{collapse}
\alias{extend}
\alias{incrementDimScale}
\alias{makeCompatible}
\alias{makeTransform}
\alias{stepLengths}
\alias{canMakeCompatible,Counts,DemographicArray-method}
\alias{collapse,Counts,CollapseTransform-method}
\alias{makeCompatible,Counts,DemographicArray-method}
\alias{makeTransform,Counts,DemographicArray-method}
\alias{makeTransform,Counts,numeric-method}
\alias{DimScales,DemographicAccount-method}
\alias{dimtypes,DemographicAccount-method}
\alias{DimScales,DemographicArray-method}
\alias{incrementDimScale,DimScale-method}
\alias{stepLengths,DimScale-method}
\alias{incrementDimScale,Intervals-method}
\alias{stepLengths,Intervals-method}
\alias{collapse,MetaData,CollapseTransform-method}
\alias{DimScales,MetaData-method}
\alias{incrementDimScale,Points-method}
\alias{stepLengths,Points-method}
\alias{stepLengths,Quantiles-method}
\alias{canMakeCompatible,Values,DemographicArray-method}
\alias{collapse,Values,CollapseTransform-method}
\alias{makeCompatible,Values,DemographicArray-method}
\alias{makeTransform,Values,DemographicArray-method}
\alias{makeTransform,Values,numeric-method}
\alias{collapse,array,CollapseTransform-method}
\alias{extend,array,ExtendTransform-method}
\alias{checkAndTidyAlong}
\alias{iFemale}
\alias{iMale}
\alias{makeCollapseTransformExtra}
\alias{getIAfter}
\alias{getIBefore}
\alias{getIShared}
\alias{makeMetaDataSubarraysBefore}
\alias{checkAge}
\alias{inferDimScale}
\alias{addIterationsToMetadata}
\alias{expandAx}
\alias{makeAxStart}
\title{Classes and functions that are exported but that are not part of the API.}
\usage{
DimScales(object, use.names = TRUE)

DimScales(object) <- value

canMakeCompatible(x, y, subset = FALSE, concordances = list(),
  allowCopyIterDim = TRUE)

collapse(object, transform)

extend(object, transform)

incrementDimScale(object, n)

makeCompatible(x, y, subset = FALSE, check = TRUE)

makeTransform(x, y, subset = FALSE, concordances = list(), check = TRUE)

stepLengths(object)

\S4method{canMakeCompatible}{Counts,DemographicArray}(x, y, subset = FALSE,
  concordances = list(), allowCopyIterDim = TRUE)

\S4method{collapse}{Counts,CollapseTransform}(object, transform)

\S4method{makeCompatible}{Counts,DemographicArray}(x, y, subset = FALSE,
  check = TRUE)

\S4method{makeTransform}{Counts,DemographicArray}(x, y, subset = FALSE,
  concordances = list(), check = TRUE)

\S4method{makeTransform}{Counts,numeric}(x, y, subset = FALSE, check = TRUE)

\S4method{DimScales}{DemographicAccount}(object, use.names = TRUE)

\S4method{dimtypes}{DemographicAccount}(object, use.names = TRUE)

\S4method{DimScales}{DemographicArray}(object, use.names = TRUE)

\S4method{incrementDimScale}{DimScale}(object, n)

\S4method{stepLengths}{DimScale}(object)

\S4method{incrementDimScale}{Intervals}(object, n)

\S4method{stepLengths}{Intervals}(object)

\S4method{collapse}{MetaData,CollapseTransform}(object, transform)

\S4method{DimScales}{MetaData}(object, use.names = TRUE)

\S4method{incrementDimScale}{Points}(object, n)

\S4method{stepLengths}{Points}(object)

\S4method{stepLengths}{Quantiles}(object)

\S4method{canMakeCompatible}{Values,DemographicArray}(x, y, subset = FALSE,
  concordances)

\S4method{collapse}{Values,CollapseTransform}(object, transform)

\S4method{makeCompatible}{Values,DemographicArray}(x, y, subset = FALSE,
  check = TRUE)

\S4method{makeTransform}{Values,DemographicArray}(x, y, subset = FALSE,
  concordances = list(), check = TRUE)

\S4method{makeTransform}{Values,numeric}(x, y, subset = FALSE, check = TRUE)

\S4method{collapse}{array,CollapseTransform}(object, transform)

\S4method{extend}{array,ExtendTransform}(object, transform)

checkAndTidyAlong(along, metadata, numericDimScales,
  checkNumericDimscales = TRUE)

iFemale(DimScale)

iMale(DimScale)

makeCollapseTransformExtra(transform)

getIAfter(i, transform, check = TRUE, useC = FALSE)

getIBefore(i, transform, useC = FALSE)

getIShared(i, transform, useC = FALSE)

makeMetaDataSubarraysBefore(metadata, transform)

checkAge(object, minAges = 2L, regular = FALSE, openLeftOK = FALSE,
  openRightOK = FALSE, expectedDimscale = "Intervals")

inferDimScale(dimtype, dimscale = NULL, labels, name)

addIterationsToMetadata(object, iterations)

expandAx(ax, object)

makeAxStart(mx)
}
\arguments{
\item{object}{Typically an object of class
\code{\linkS4class{DemographicArray}}.}

\item{use.names}{Logical. Whether to return a named vector.}

\item{value}{Replacement value.}

\item{x}{First element.  Typically an object of class
\code{\linkS4class{DemographicArray}}.}

\item{y}{Second element.  Typically an object of class
\code{\linkS4class{DemographicArray}}.}

\item{subset}{Logical. Whether to allow transformations that return a
subset of all cells.}

\item{concordances}{A list of objects of class
\code{\link[classconc:Concordance-class]{Concordance}}.}

\item{allowCopyIterDim}{Logical. Whether to allow an iteration dimension
to be copied from one element to the other, if one element has an iterations
dimension but the other does not.}

\item{transform}{An object of class \code{\linkS4class{Transform}}.}

\item{n}{Number of increments.}

\item{check}{Logical. Whether to check if transformation can be performed
before trying to perform it.}

\item{along}{Name or index of dimension.}

\item{metadata}{An object of class \code{\linkS4class{MetaData}}.}

\item{numericDimScales}{Logical. Whether to require that \code{along}
dimension have \code{\link{dimscale}} \code{"Points"} or \code{"Intervals"}.}

\item{DimScale}{An object of class DimScale.}

\item{i}{Integer. Index for cell within.}

\item{useC}{Logical. Whether to call the C function, or use the R equivalent.}

\item{minAges}{Integer. Minimum length for age dimension.}

\item{regular}{Logical. Whether age or time steps must have equal lengths.}

\item{openLeftOK}{Logical. Whether the first age group can be open (ie
have no minimum age.)}

\item{openRightOK}{Logical. Whether the last age group can be open (ie
have no minimum age.)}

\item{expectedDimscale}{Name of a \code{\link{dimscale}}.}

\item{dimtype}{A \code{\link{dimtype}}.}

\item{dimscale}{A \code{\link{dimscale}}.}

\item{labels}{A character vector with labels for a dimension.}

\item{name}{Character. A dimension name.}

\item{iterations}{Integer.  The iteractions to extract.}

\item{ax}{Separation factors.}

\item{mx}{Mortality rates.}
}
\description{
The classes functions listed below are exported, so that they can be
used internally by other packages such as \code{demest}.  However, they
do not form part of API for the package \code{dembase}.  They
should not be needed in normal interactive use.
}
