% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/Counts-methods.R,
%   R/Values-methods.R
\name{collapseIntervals}
\alias{collapseIntervals}
\alias{collapseIntervals,Counts,ANY,numeric,missing,missing,missing-method}
\alias{collapseIntervals,Counts,ANY,numeric,NULL,NULL,missing-method}
\alias{collapseIntervals,Counts,ANY,missing,numeric,missing,missing-method}
\alias{collapseIntervals,Counts,ANY,NULL,numeric,NULL,missing-method}
\alias{collapseIntervals,Counts,ANY,missing,missing,character,missing-method}
\alias{collapseIntervals,Counts,ANY,NULL,NULL,character,missing-method}
\alias{collapseIntervals,Counts,ANY,missing,missing,numeric,missing-method}
\alias{collapseIntervals,Counts,ANY,NULL,NULL,numeric,missing-method}
\alias{collapseIntervals,Counts,ANY,ANY,ANY,ANY,Counts-method}
\alias{collapseIntervals,Values,ANY,ANY,ANY,ANY,ANY-method}
\title{Collapse intervals.}
\usage{
collapseIntervals(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights,
  ...
)

\S4method{collapseIntervals}{Counts,ANY,numeric,missing,missing,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,numeric,`NULL`,`NULL`,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,missing,numeric,missing,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,`NULL`,numeric,`NULL`,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,missing,missing,character,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,`NULL`,`NULL`,character,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,missing,missing,numeric,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,`NULL`,`NULL`,numeric,missing}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Counts,ANY,ANY,ANY,ANY,Counts}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)

\S4method{collapseIntervals}{Values,ANY,ANY,ANY,ANY,ANY}(
  object,
  dimension,
  breaks = NULL,
  width = NULL,
  old = NULL,
  weights
)
}
\arguments{
\item{object}{Object of class \code{\linkS4class{DemographicArray}}.}

\item{dimension}{Name or index of the dimension where the intervals are
found.}

\item{breaks}{Numeric vector giving the breaks between intervals after the
merging has occurred.}

\item{width}{The length of the intervals after the merging has occurred.}

\item{old}{The labels of the intervals to be merged.}

\item{weights}{Object of class \code{\linkS4class{Counts}} or the number
\code{1}.  Required when \code{object} has class
\code{\linkS4class{Values}} and prohibited when it has class
\code{\linkS4class{Counts}}.}

\item{\dots}{Not currently used.}
}
\description{
Merge intervals within a dimension of a \code{\linkS4class{DemographicArray}}
object.  The dimension must have \code{\link{dimscale}} \code{"Intervals"}.
}
\details{
Only one of \code{breaks}, \code{width}, and \code{old} should be supplied.

\code{breaks} must be a subset of the current breaks between intervals.  The
first and last breaks can be omitted, as these are always retained by
\code{collapseIntervals}.

\code{width} is a shortcut version of \code{breaks} for the common case
where all of the collapsed intervals will have the same width (apart from
any open intervals).  It is equivalent to setting breaks equal to
\code{seq(from = a, to = b, by = width)} where \code{a} is the lowest
(finite) break in \code{dimension}, and \code{b} is the highest.

\code{old} allows intervals to be identified by their labels, as with
\code{\link{collapseCategories}}.  Unlike with
\code{\link{collapseCategories}}, however, no \code{new} argument is
required (since it can be deduced from \code{old}, and the elements of
\code{old} must be consecutive.

If \code{weights} equals \code{1}, all cells are receive equal weights.
}
\examples{
library(demdata)
popn <- Counts(VAPopn)
collapseIntervals(popn, dimension = "age", breaks = c(50, 60, 70, 75))

## same results if first and last breaks omitted
collapseIntervals(popn, dimension = "age", breaks = c(60, 70))

## won't work since distance between first and last breaks
## not divisible by 10
\dontrun{
collapseIntervals(popn, dimension = "age", width = 10)
}

## works if last age group omitted
popn.trunc <- subarray(popn, age < 70)
collapseIntervals(popn.trunc, dimension = "age", width = 10)

## selection via labels
collapseIntervals(popn, dimension = "age", old = c("60-64", "65-69", "70-74"))

## weights needed when collapsing objects of class "Values"
rates <- Values(VADeaths2)
collapseIntervals(rates, dimension = "age", breaks = 65, weights = popn)
collapseIntervals(rates, dimension = "age", breaks = 65, weights = 1)
}
\seealso{
\code{\link{collapseCategories}}, \code{\link{collapseIterations}},
\code{\link{collapseOrigDest}}, \code{\link{collapseDimension}},
\code{\link{dimscales}}
}
