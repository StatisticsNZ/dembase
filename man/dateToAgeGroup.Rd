% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miscellaneous-functions.R
\name{dateToAgeGroup}
\alias{dateToAgeGroup}
\alias{dateToAgeGroup}
\alias{datesToCohorts}
\alias{datesToPeriods}
\alias{datesToTriangles}
\title{Calculate ages, periods, cohorts, and Lexis triangles from dates.}
\usage{
dateToAgeGroup(date, dob, step = "1 year", lastOpen = TRUE)

datesToCohorts(dob, step = "years", monthStart = "January",
  yearStart = 2000)

datesToPeriods(date, step = "years", monthStart = "January",
  yearStart = 2000)

datesToTriangles(date, dob, step = "years", monthStart = "January",
  yearStart = 2000)
}
\arguments{
\item{date}{A vector of class \code{\link[base]{Date}}.  All elements of
\code{date} must be equal to or greater than the corresponding elements
of \code{dob}.}

\item{dob}{A vector of class \code{\link[base]{Date}}.}

\item{step}{Length of age-time step.}

\item{lastOpen}{Whether last age interval is open on the right.}

\item{monthStart}{The English name of a month (as defined by
\code{\link{month.name}}.  Can be abbreviated.}

\item{yearStart}{An integer. Controls the start date of multi-year
periods.}
}
\value{
A factor.
}
\description{
Calculates ages in completed years, periods, birth cohorts,
or Lexis triangles from dates.
}
\details{
If \code{date} and \code{dob} are different lengths, the shorter
vector is recycled.

By default, age-time steps are assumed to be equal to one year. However,
alternative lengths can be specified, via the \code{step} argument.
The steps are described as multiples of years, quarters or months.
If no multiple is provided, it is assumed to equal one.
Typical values are \code{"5 years"}, \code{"month"}, 
\code{"quarter"}, and \code{"6 months"}.  If a step length is less than 1
year,  then it must divide the year without leaving a remainder.
Thus, for example, \code{"4 months"} is a valid value for \code{step},
but \code{"5 months"} is not.

By default, periods of one year are assumed to start on 1 January.
Other starting months can be specified via \code{monthStart}.
See below for examples.

Multi-year periods are assumed to start on years beginning with 0 or 5.
Other values can be specified via \code{yearStart}.  See below for examples.

These functions handle leap years differently from \code{\link{seq.Date}}.
Like most people, but unlike \code{\link{seq.Date}}, they treat 29 February
as if it was 28 February.  For instance, with \code{datesToAge}, a
person who was born on 29 February 2000 reaches age 1 on 28 February 2001.
With \code{seq.Date}, they reach age 1 on 1 March 2001.
}
\examples{
date <- as.Date(c("2005-07-05", "2006-06-30", "2008-07-05"))
dob <- as.Date(c("2005-06-30", "2005-06-30", "2006-07-01"))
dateToAgeGroup(date = date, dob = dob)
dateToAgeGroup(date = date, dob = dob, lastOpen = FALSE)
dateToAgeGroup(date = date, dob = dob, step = "2 years")
dateToAgeGroup(date = date, dob = dob, step = "quarter")
dateToAgeGroup(date = date, dob = dob, step = "month")
datesToPeriods(date = date)
datesToPeriods(date = date, monthStart = "July")
datesToPeriods(date = date, step = "2 years", yearStart = 2001)
datesToPeriods(date = date, step = "quarter")
datesToCohorts(dob)
datesToCohorts(dob, step = "2 quarters")
datesToTriangles(date = date, dob = dob)
datesToTriangles(date = date, dob = dob, step = "2 years")
datesToTriangles(date = date, dob = dob, monthStart = "April")

## 'date' must be later than 'dob'
\dontrun{
dateToAgeGroup(date = as.Date("2000-01-01"), dob = as.Date("2005-01-01"))
}
}
\seealso{
Vectors of class \code{\link{Date}} can be created with
function \code{\link{as.Date}}.
}
