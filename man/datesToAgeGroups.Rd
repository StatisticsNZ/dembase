% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miscellaneous-functions.R
\name{datesToAgeGroups}
\alias{datesToAgeGroups}
\alias{datesToAgeGroups}
\alias{datesToPeriods}
\alias{datesToTriangles}
\title{Calculate ages and Lexis triangles from dates.}
\usage{
datesToAgeGroups(date, dob, step = "1 year", lastOpen = TRUE)

datesToPeriods(date, step = "1 year", start = as.Date("1970-01-01"))

datesToTriangles(date, dob, step = "1 year", start = as.Date("1970-01-01"))
}
\arguments{
\item{date}{A vector of class \code{\link[base]{Date}}.  All elements of
\code{date} must be equal to or greater than the corresponding elements
of \code{dob}.}

\item{dob}{A vector of class \code{\link[base]{Date}}.}

\item{step}{Length of age-time step.}

\item{lastOpen}{Whether last age interval is open on the right.}

\item{start}{A single \code{\link[base]{Date}}, giving the first day
of one of the time intervals.}
}
\value{
A factor.
}
\description{
Calculates ages in completed years, or Lexis triangles, from a vector of dates, and
a vector of dates of birth.
}
\details{
If \code{date} and \code{dob} are different lengths, the shorter
vector is recycled.

By default, age-time steps are assumed to be equal to one year. However,
alternative lengths can be specified, via the \code{step} argument.
Typical alternative values are \code{"5 years"}, \code{"month"}, 
\code{"quarter"}, and \code{"6 months"}.  Integers are rounded down,
so that, for instance, \code{"5.999 years"} is equivalent to \code{"5 years"}.
Negative values are not allowed.  If a step length is less than 1 year,
it must divide the year without leaving a remainder.  Thus, for example,
\code{"4 months"} is a valid value for \code{step}, but \code{"5 months"}
is not.

By default, the first time interval is assumed to start on 1 January.  Thus,
for example, one-year intervals might start on 1 January 2000, 1 January 2001,
1 January 2002, etc, and one-quarter intervals might start on 1 January 2000,
1 April 2000, 1 July 2000, etc.

Sometimes, however, intervals need to start on a different date.
To do this, use \code{start} argument to specify the start date
for a typical period.  For instance,  "years to June"
(ie intervals running from 1 July 2000 - 30 June 2001,
1 July 2001 - 30 June 2000, etc), can be obtained by setting
\code{start} to \code{as.Date("2000-07-01")}.  See below for examples.

If \code{step} is less than one year, then \code{start} must belong to
the series 1 January, 1 January + step, 1 January + 2 * step, ...
}
\examples{
date <- as.Date(c("2005-07-05", "2006-06-30", "2008-07-05"))
dob <- as.Date(c("2005-06-30", "2005-06-30", "2006-07-01"))
datesToAgeGroups(date = date, dob = dob)
datesToAgeGroups(date = date, dob = dob, lastOpen = FALSE)
datesToAgeGroups(date = date, dob = dob, step = "2 years")
datesToAgeGroups(date = date, dob = dob, step = "quarter")
datesToAgeGroups(date = date, dob = dob, step = "month")
datesToPeriods(date = date)
datesToPeriods(date = date, step = "quarter")
datesToTriangles(date = date, dob = dob)
datesToTriangles(date = date, dob = dob, step = "2 years")
datesToTriangles(date = date, dob = dob, start = as.Date("2000-07-01"))

## 'date' must be later than 'dob'
\dontrun{
datesToAgeGroups(date = as.Date("2010-01-01"), dob = as.Date("2000-01-01"))
}
}
\seealso{
Vectors of class \code{\link{Date}} can be created with
function \code{\link{as.Date}}.
}
