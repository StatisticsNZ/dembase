% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/Counts-generator.R, R/Values-generator.R
\docType{methods}
\name{counts-values-generator}
\alias{Counts}
\alias{Counts,ANY-method}
\alias{Counts,DemographicArray-method}
\alias{Counts,array-method}
\alias{Counts,numeric-method}
\alias{Values}
\alias{Values,ANY-method}
\alias{Values,DemographicArray-method}
\alias{Values,array-method}
\alias{Values,numeric-method}
\alias{counts-values-generator}
\title{Create objects of class "Counts" or "Values".}
\usage{
Counts(object, dimtypes = NULL, dimscales = NULL)

Values(object, dimtypes = NULL, dimscales = NULL)

\S4method{Counts}{array}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Counts}{numeric}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Counts}{ANY}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Counts}{DemographicArray}(object, dimtypes = NULL,
  dimscales = NULL)

\S4method{Values}{array}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Values}{numeric}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Values}{ANY}(object, dimtypes = NULL, dimscales = NULL)

\S4method{Values}{DemographicArray}(object, dimtypes = NULL,
  dimscales = NULL)
}
\arguments{
\item{object}{An array, an array-like object such as a table, or a vector.
The object must have a full set of names and dimnames (see below for details.)}

\item{dimtypes}{A named character vector describing the \code{\link{dimtypes}}
of one or more dimensions.}

\item{dimscales}{A named character vector describing the \code{\link{dimscales}}
of one or more dimensions.}
}
\value{
An object of class \code{\linkS4class{Counts}} or \code{\linkS4class{Values}}.
}
\description{
Create objects of class \code{\linkS4class{Counts}} or \code{\linkS4class{Values}}
from an array-like object with a full set of dimnames.
}
\details{
A full set of dimnames means that \code{dimnames(object)} is a named list with
no \code{NA}s or (unless the dimension has length 0) \code{NULL}s.
In addition, within each dimension there should be no repeated dimnames.

If the dimnames for a dimension look like labels for points or intervals,
but are not in numeric order, then \code{Counts} and \code{Values} will
permute rows to put them in order.  The most common reason for having interval labels
out of order is that \code{xtabs} has sorted them lexicographically.
See below for an example.

Functions \code{Counts} and \code{Values} infer dimtypes and dimscales from
\code{dimnames(object)}, plus the \code{dimtypes} and \code{dimscales} arguments,
if supplied.  Some ways to assist this process are:
\itemize{
  \item If the \code{dimtypes} argument is not used, then dimensions should have
names that match the dimtypes, or are equivalent, such as \code{"time"} (the dimtype itself),
\code{"Year"}, or \code{"period"} (two equivalents).  Case is ignored.
If \code{Count} or \code{Values} do not recognize a dimension name,
they assume the dimtype is \code{"state"}.
\item Age labels should follow the style \code{"<0"}, \code{"0"}, \code{"1-4"},
\code{"5-9"}, \code{"10+"}.  \code{"<a"} means the interval \code{(Inf, a)}.
When all breaks are integers, \code{"a0-a1"} means the interval between exact ages
\code{a0} and \code{a1+1}, and \code{"a"} means the interval between exact ages
\code{a} and \code{a+1}. \code{Counts} and \code{Values} will in fact recognize
some variations on the standard symbols, but in non-interactive use it is
safest to use the standard ones.
\item Time labels follow a different style from age labels: when all breaks are integers,
the lower limit of each interval is increased by one, instead of the upper limit
being reduced by one.  Thus, for example, \code{"2001-2005"} means the interval
between exact times \code{2000} and \code{2005}, and \code{"2001"} means interval
between exact times \code{2000} and \code{2001}.
 \item \code{Counts} and \code{Values} assume that a set of intervals are referring
to age if the maximum (finite) break is less than 1000, and are referring to time otherwise.
 \item If dimnames for a dimension consist of consecutive integers,such as \code{"0"},
\code{"1"}, \code{"2"}, then \code{Counts} and
 \code{Values} cannot tell whether the dimscale should be \code{"Intervals"}
or \code{"Points"}.  If a dimension has dimtype \code{"age"}, the
default is to assume that the dimscale is \code{"Intervals"}, though
with a message informing the user that this assumption has been made.
If a dimension has dimtype \code{"time"}, an error is raised.
 \item As discussed in \code{\link{dimtypes}}, some dimensions come in pairs.
The pairs are identified using suffixes \code{"_orig"} and \code{"_dest"}
(for \code{"origin"} and \code{"destination"} dimensions) and \code{"_parent"}
and \code{"_child"} (for \code{"parent"} and \code{"child"} dimensions).
As discussed in \code{\linkS4class{DemographicArray}}, there on restrictions
on which dimscales may be used with which dimtypes.  See the Titanic example below.
}
}
\examples{
a <- array(rpois(n = 8, lambda = 10),
          dim = c(2, 2, 2),
          dimnames = list(age = c("0-39", "40+"),
                          sex = c("Female", "Male"),
                          year = c("2001-2010", "2011-2020")))
a
Counts(a)
names(dimnames(a)) <- c("aGe", "SEX", "perioD")
Counts(a)

a <- array(rnorm(n = 5), dim = 5, dimnames = list(age = 0:4))
a
Values(a)
Values(a, dimscales = c(age = "Points"))

Counts(occupationalStatus)

Titanic
\dontrun{Counts(Titanic)} ## fails
## 'Counts' assumes that the dimension called "Age"
## has dimtype "age", but is then unable to derive
## "Points" or "Intervals" dimscales from categories
## "Child" and "Adult".

## One solution is to rename the "Age" dimension
## to something that Counts does not recognize
## as an age group
Titanic2 <- Titanic
names(dimnames(Titanic2))[3] <- "AgeGp"
Counts(Titanic2)

## A better solution is to explicitly set the dimtypes
Counts(Titanic, dimtypes = c(Age = "state"))

## DemographicArray objects can be created from numeric vectors,
## provided that the vectors have enough names
births <- c(Males = 105, Females = 100)
Counts(births)

## 'xtabs' gets the labels in the wrong order,
## but 'Counts' put them back into the right order
d <- data.frame(age = c("0-4", "5-9", "10+", "0-4", "5-9", "10+"),
                sex = c("F", "F", "F", "M", "M", "M"),
                count = 1:6)
xt <- xtabs(count ~ age + sex, data = d)
x <- Counts(xt)
}
\seealso{
\code{\linkS4class{Counts}}, \code{\linkS4class{Values}},
\code{\link{dimtypes}}, \code{\link{dimscales}}
}

