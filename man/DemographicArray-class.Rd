% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R
\docType{class}
\name{DemographicArray-class}
\alias{DemographicArray-class}
\alias{Counts-class}
\alias{Values-class}
\alias{DemographicArrayOrNumeric-class}
\title{Classes "DemographicArray", "Counts", and "Values".}
\description{
Classes for representing demographic arrays: esssentially, arrays plus metadata.
}
\details{
\code{DemographicArray} is a virtual superclass, and
 \code{Counts} and \code{Values} its two main subclasses.  For
 a discussion of what these terms mean and of R's class system see
 \code{\link[methods]{Classes}}.  However, to use package
 \pkg{dembase}, it is probably enough to know that the phrase
 'objects of class\code{DemographicArray}' is shorthand for 'objects of
 any class that is a subclass of \code{DemographicArray}'.  A list of the
 subclasses of \code{DemographicArray} can be obtained using
 \code{getClass(DemographicArray)}.
    
 Objects of class \code{DemographicArray} are arrays with some
 specialized metadata that are useful when dealing with population data.  For
 instance, all objects of class \code{DemographicArray} have
 \code{\link{dimtypes}} and \code{\link{dimscales}} describing the type
 of variable being measured and the measurement scale.  Objects of
 class \code{DemographicArray} also have some specialized behaviours that
 arrays do not.  For instance, when two objects of class
 \code{DemographicArray} are added together, the dimensions of the two
 objects are automatically aligned.

Objects of class \code{Counts} hold data about numbers of people or
  events, while objects of class \code{Values} hold information about
  characteristics or attributes.  Some functions, such as ones that
  aggregate cells, treat objects of class {"Counts"} differently from
  objects of class {"Values"}.

Unlike ordinary arrays, objects of class \code{DemographicArray}
   must have a complete set of dimnames, meaning that each dimension
   must be named, and within a dimension the labels must be
   unique.
}
\section{Objects from the class}{

  Objects of class \code{Counts} and \code{Values} are generated using functions
 \code{\link{Counts}} and \code{\link{Values}}.  Because \code{DemographicArray}
 is a virtual class, no objects may be created from it.
}

\section{Automating reshaping}{

When demographic arrays are used in arithmetic, or are supplied to
a function, one or more of the objects will attempt to reshape themselves
so that the objects are compatible.  The reshaping involves the following
operations:
\describe{
 \item{Permuting dimensions}{Dimensions are rearranged so that
 they follow the same order.}
 \item{Adding dimensions}{If an object of class {"Values"}
 lacks a dimension that others have, the missing dimension is added to
 that object.}
 \item{Collapsing dimensions}{If an object of class
 \code{"Counts"} has a dimension that others lack, the extra
 dimension is collapsed away.}
 \item{Permuting categories}{Categories within each dimension
 are rearranged so that they follow the same order.}
 \item{Splitting intervals}{If an object of class
 \code{"Values"} uses coarser intervals than other objects, the coarser
 intervals are split.  Cells within the new intervals have the same
 values as cells within the old combined interval.}
 \item{Collapsing intervals}{If an object of class
 \code{"Counts"} uses finer intervals than other objects, the finer
 intervals are collapsed.}
 \item{Subsetting}{If on object contains categories that another
object does not, the extra categories are typically dropped.}
}

If these operations are not sufficient to align objects, then an error
is raised.  In particular, an error will be raised if the only way to
align objects is to remove cells.

 The rules for adding dimensions to objects of class \code{"Values"},
 and for splitting intervals within objects of class \code{"Values"},
 assume that, within each cell of the original classification, every
 person or event is identical.  These sorts of homogeneity assumptions
 are standard in applied demography.  The assumptions are more
 plausible when more categories are dimensions are used.  Homogeneity
 assumptions can be avoided by adding dimensions or splitting intervals
 'by hand' with functions such as \code{\link{addDimension}}.
 
 When there is a mixture of \code{"Counts"} and \code{"Value"} objects,
 there is often a choice collapsing the \code{"Counts"} objects and
 splitting or adding to the \code{"Values"} objects.  The default it to
 split and add to the \code{"Values"} objects, as this preserves all
 the original detail while giving the same subtotals.
}

\section{Methods for existing functions}{

  A function that was designed to work with ordinary arrays will
  generally gives an equivalent result when used with a demographic array.
  For instance, if \code{a} is an array, then \code{sum(a)}
  equals \code{sum(Counts(a))}.

 Some methods for demographic arrays include options not
 available for ordinary arrays.  See, for instance,
 \code{\link[=as.data.frame]{as.data.frame}} and
 \code{\link[=names-methods]{names}}.
 
 In some cases, copying the behaviour of ordinary arrays would require
 breaking the rules governing dimension names, dimtypes, and
 dimscales discussed in \code{\link{dimtypes}}.  See, for instance,
 \code{\link[dembase]{drop}}.
 
 Function \code{\link[=names-methods]{names}} returns \code{NULL} when used
 with an ordinary array, but returns the names of the dimensions when
 used with a demographic array.
}

\examples{
a <- array(stats::rpois(n = 6, lambda = 10),
          dim = c(3, 2),
          dimnames = list(age = c("0-19", "20-64", "65+"),
              sex = c("Female", "Male")))
x <- Counts(a)
x
plot(x)
x^2
mean(x)
names(x)
collapseDimension(x, dimension = "age")

b <- array(rnorm(n = 6),
           dim = c(2, 3),
          dimnames = list(sex = c("Male", "Female"),
               age = c("0-19", "20-64", "65+")))
y <- Values(b)
y
## 'y' is automatically reshaped to align to 'x'
x * y
## weights are required with objects of class "Values"
collapseDimension(y, dimension = "age", weights = x)
}
\seealso{
\code{\link{Counts}}, \code{\link{Values}}, \code{\link{dimtypes}}
 \code{\link{dimscales}}.  The main new functions for manipulating
demographic arrays are listed in \code{\link{dembase-package}}.
}
